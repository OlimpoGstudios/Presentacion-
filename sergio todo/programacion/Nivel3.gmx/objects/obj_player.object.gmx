<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vsp = 0;
hsp = 1;
grav = 0.3;
grounded = 0;
flip = 0;
djump = 0;
ladder = false;
movespeed = 3
jumpspeed = 3
hsp_carry = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_player</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Teclas
Key_Left    =   keyboard_check_direct(vk_left);
Key_Right   =   keyboard_check_direct(vk_right);
Key_Jump    =   keyboard_check_pressed(vk_space);
Key_Up      =   keyboard_check_direct(vk_up);
Key_Down    =   keyboard_check_direct(vk_down);

//Movimiento
if (Key_Left)
{
    flip = 1;
    hsp = -2;
}

if (Key_Right)
{
    flip= 1;
    hsp = 2;
}


//Quieto
if ((Key_Right &amp;&amp; Key_Left) or (!Key_Right &amp;&amp; !Key_Left))
{
    hsp = 0;
}

//Salto
if (Key_Jump)
{
    if (grounded) 
    {
        vsp = -8;
    }
    else
    {
        if(djump)
        {
            vsp = -6
            djump = 0;
        }
    }
}

vsp += grav;

//Escalar
if (Key_Up || Key_Down)
{
    if place_meeting(x,y,par_ladder) ladder = true;
}

if (ladder)
{
    vsp = 0;
    
    if (Key_Up) vsp = -2;
    if (Key_Down) vsp = 2;
    if !place_meeting(x,y,par_ladder) ladder = false;    
    if (Key_Jump) ladder = false;
}


//ColisionH
if place_meeting(x+hsp,y,par_wall)
{
    while (!place_meeting(x+sign(hsp),y,par_wall)) x+=sign(hsp);
    hsp = 0;
}
x += hsp;

//ColisionV
if place_meeting(x,y+vsp,par_wall) 
{
    while (!place_meeting(x,y+sign(vsp),par_wall)) y+=sign(vsp);
    if (sign(vsp) == 1) 
    {
        grounded = 1;
        djump = 1;
    }
    vsp = 0;
}
else
{
    grounded = 0;
}
y += vsp;





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext
(
sprite_index,
image_index,
x,
y, 
flip,
1,
0,
image_blend,
image_alpha
);

//draw_sprite_ext(sprite_index,image_index,x,y,1,flip,0,image_blend,image_alpha)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>331</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_restart_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
